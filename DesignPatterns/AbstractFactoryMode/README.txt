抽象工厂

1、简介
	简单工厂：新增产品类，需要对工厂代码进行改写 =》需要改动工厂代码
	工厂模式：抽象出工厂基类、产品基类，每个具体工厂类只完成单个产品实例的创建，符合开闭原则（对扩展开放，对修改封闭）=》一个工厂不可能只创建一个产品
	抽象工厂：提供一个创建产品的接口来负责创建一组相关或依赖对象，不明确指定具体类 =》抽象工厂创建工厂

2、角色
	1）抽象工厂
		所有具体工厂的父类，声明了创建一个产品组的方法，由子类工厂去实现
	2）具体工厂
		实现抽象工厂中声明的方法，生产出一个产品组
	3）抽象产品
		所有具体产品的父类，声明所有具体产品的公告方法
	4）具体产品
		实现抽象父类中的声明方法

3、分析
	抽象工厂对于原有产品的变化支持开闭原则，对于需要新增产品时，则不支持开闭原则
	由于抽象工厂中已经确定了可以被创建的产品集合，故抽象工厂很难支持新种类产品变化。当需要添加新产品时，此时就必须修改抽象工厂类，从而导致抽象工厂类与其所有子类的改变，从而违背了开闭原则
	使用抽象工厂的前提
		1）一个系统不要求依赖产品类实例如何被创建、组合和表达的表达
		2）这个系统有多个系列产品，而系统中只消费其中某一系列产品
		3）系统要求提供一个产品类的库，所有产品以同样的接口出现，客户端不需要依赖具体实现

4、参考
	C#设计模式(4)――抽象工厂模式 http://www.cnblogs.com/zhili/p/AbstractFactory.html
	C#设计模式02-抽象工厂模式（附源码） https://blog.csdn.net/bhdxmaomi/article/details/50504328
